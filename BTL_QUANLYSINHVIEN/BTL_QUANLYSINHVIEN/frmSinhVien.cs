
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using BUS;
using DTO;

namespace BTL_QUANLYSINHVIEN
{
    public partial class frmSinhVien : Form
    {
        public bool them = true;
        public bool sua = false;
        public int soLuongSV = 0;
        public bool daChuanhoa = false;
        SinhVien_DTO sv;
        AddTab.TabAdd s = new AddTab.TabAdd(); 
        public frmSinhVien()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
           // sqlDataSource1.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            //sqlDataSource1.Fill();
            
        }

        public void AnMenu(bool logged)
        {
            //Mac dinh la dang nhap thanh cong bat het cac Menu

            //
            btnThem.Enabled = logged;
            btnSua.Enabled = logged;
            btnXoa.Enabled = logged;
            //  btnThoat.Enabled = logged;
           // btnXuatExcel.Enabled = logged;
            //btnNhapExcel.Enabled = logged;
            btnXemDiem.Enabled = logged;
            btnCapNhat.Enabled = logged;
            btnLuu.Enabled = logged;
            btnHuy.Enabled = logged;
            btnNext.Enabled = logged;
            btnLast.Enabled = logged;
            btnPrevious.Enabled = logged;
            btnFirst.Enabled = logged;
            btnChuanHoa.Enabled = logged;
        }
        private void frmSinhVien_Load(object sender, EventArgs e)
        {
            AnMenu(false);
           // gcSinhVien.DataBindings=SinhVienbindingSource
        }
        private void btnDSSinhVien_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            load_DS();
            //load tên lớp vào combobox
            DataTable dtb=Lop_BUS.LoadtenLop();
            for(int i=0;i<dtb.Rows.Count;i++)
            {
               // string name = dtb.Rows[i][0].ToString().ToUpper();
               
                string name = s.ChuanHoa(dtb.Rows[i][0].ToString().ToLower());
                cboLop.Items.Add(name);
                repositoryItemComboBox1.Items.Add(name);
            }
            btnDSSinhVien.Enabled = false;
            //nbcThongTin.OptionsNavPane.NavPaneState = DevExpress.XtraNavBar.NavPaneState.Collapsed;
            AnMenu(true);
            //
        }
       
        public void load_DS()
        {
            SinhVienbindingSource.DataSource = SinhVien_BUS.DanhSachSV();
            gcSinhVien.DataSource = SinhVienbindingSource;
            soLuongSV = gvSinhVien.RowCount;
            int soLop = cboLop.Items.Count;
            for (int i = 0; i < soLop; i++)
            {
                repositoryItemComboBox1.Items.RemoveAt(0);
                cboLop.Items.RemoveAt(0);
            }
        }

        private void gvSinhVien_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            if (gvSinhVien.FocusedRowHandle>=0)
            {
                tbMaSV.Text = gvSinhVien.GetFocusedRowCellValue(colMaSV).ToString();
                tbHoSV.Text = gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString();
                tbTenSV.Text = gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString();
                //ToUpper để convert sang chữ in hoa
                if (gvSinhVien.GetFocusedRowCellValue(colGioiTinh).ToString().ToUpper() == "NAM") cboGioiTinh.SelectedIndex = 0;
                else cboGioiTinh.SelectedIndex = 1;
                if (gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString()!="")
                    dtpNgaySinh.Value = DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString());
                if (gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString() != "")
                    dtpNgayNhapHoc.Value = DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString());
                tbNoiSinh.Text = gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString();
                tbDiaChi.Text = gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString();
                cboLop.Text = gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString();
                sua = false;
            }
        }

        private void btnSua_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
                nbcThongTin.OptionsNavPane.NavPaneState = DevExpress.XtraNavBar.NavPaneState.Expanded;
                tbHoSV.Focus();
        }
        //thêm sinh viên
        private void btnThem_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
           // if (this.ShowDialog()== DialogResult.Yes)
            // frmThemSinhVien frm = new frmThemSinhVien();
          //  {
            nbcThongTin.OptionsNavPane.NavPaneState = DevExpress.XtraNavBar.NavPaneState.Expanded;
            if(them)
            {
                tbHoSV.Clear();
                tbTenSV.Clear();
                tbDiaChi.Clear();
                tbNoiSinh.Clear();
                string maSV = nextMa(SinhVien_BUS.LastMaSV());
                //
                them = false;
                SinhVienbindingSource.AddNew();
                //mã sinh viên tự tăng
                gvSinhVien.SetFocusedRowCellValue(colMaSV, maSV);
                tbMaSV.Text = maSV.ToString();
                //trỏ tới dòng cuối cùng trong gridview
                gvSinhVien.FocusedRowHandle = gvSinhVien.RowCount - 1;
                tbHoSV.Focus();

            }
            else
            {
                tbHoSV.Focus();
                gvSinhVien.FocusedRowHandle = gvSinhVien.RowCount - 1;
            }
           // frm.Show();
        }
        //Hàm tự tăng mã sinh viên
        public string nextMa(string s)
        {
            string sub1 = s.Substring(0, 2);
            string sub2 = s.Substring(2).Trim();
            int ma = Convert.ToInt32(sub2) + 1;
            string sub = "";
            //chèn thêm các kí tự 0 vào mã
            for (int i = 0; i < sub2.Length - ma.ToString().Length; i++)
                sub += "0";
            sub += ma.ToString();
            sub1 += sub;
            //
            return sub1;
        }
        #region Tìm kiếm
        //tìm kiếm tất cả
        private void chkTatCa_CheckedChanged(object sender, EventArgs e)
        {
            if (chkTatCa.Checked)
                gvSinhVien.OptionsFind.FindFilterColumns = "*";
        }
        //kiểm tra các checkbox tìm kiếm
        private string testCheckTimKiem()
        {
            gvSinhVien.OptionsFind.FindFilterColumns = "";
            if (chkMaSV.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns += "MaSV;";
            }
            if (chkHoSV.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns += "HoSV;";
            }
            if (chkTenSV.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns += "TenSV;";
            }
            if (chkDiaChi.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns += "DiaChi;";
            }
            if (chkNoiSinh.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns += "NoiSinh;";
            }
            if (chkTenLop.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns += "TenLop;";
            }
            if (!chkMaSV.Checked && !chkTenSV.Checked && !chkHoSV.Checked && !chkDiaChi.Checked && !chkNoiSinh.Checked && !chkTenLop.Checked)
                gvSinhVien.OptionsFind.FindFilterColumns = "*";
            return gvSinhVien.OptionsFind.FindFilterColumns;
        }
        private void chkMaSV_CheckedChanged(object sender, EventArgs e)
        {
            if (chkMaSV.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
                chkTatCa.Checked = false;
            }
            else gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
        }

        private void cbkHoSV_CheckedChanged(object sender, EventArgs e)
        {
            if (chkHoSV.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
                chkTatCa.Checked = false;
            }
            else gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
        }


        private void chkTenSV_CheckedChanged(object sender, EventArgs e)
        {
            if (chkTenSV.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
                chkTatCa.Checked = false;
            }
            else gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
        }

        private void chkDiaChi_CheckedChanged(object sender, EventArgs e)
        {
            if (chkDiaChi.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
                chkTatCa.Checked = false;
            }
            else gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
        }

        private void chkNoiSinh_CheckedChanged(object sender, EventArgs e)
        {
            if (chkNoiSinh.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
                chkTatCa.Checked = false;
            }
            else gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
        }

        private void chkTenLop_CheckedChanged(object sender, EventArgs e)
        {
            if (chkTenLop.Checked)
            {
                gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
                chkTatCa.Checked = false;
            }
            else gvSinhVien.OptionsFind.FindFilterColumns = testCheckTimKiem();
        }
        #endregion

        #region di chuyển trong gridview
        private void btnFirst_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SinhVienbindingSource.MoveFirst();
        }

        private void btnPrevious_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SinhVienbindingSource.MovePrevious();
        }

        private void btnNext_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SinhVienbindingSource.MoveNext();
        }

        private void btnLast_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            SinhVienbindingSource.MoveLast();
        }
        #endregion
        //button lưu (khi thêm hoặc sửa)
        private void btnLuu_Click(object sender, EventArgs e)
        {
            try
            {
                if (!them&& gvSinhVien.FocusedRowHandle == gvSinhVien.RowCount - 1)
                {
                    if (tbHoSV.Text != "" && tbTenSV.Text != "" && cboLop.Text != "")
                    {
                        //chuẩn hóa tên
                        string maLop = Lop_BUS.maLop(cboLop.Text);
                        string hoSV = ChuanHoa(tbHoSV.Text.ToLower());
                        string tenSV = ChuanHoa(tbTenSV.Text.ToLower());
                        string gioiTinh = ChuanHoa(cboGioiTinh.Text.ToLower());
                        string diaChi = ChuanHoa(tbDiaChi.Text.ToLower());
                        string noiSinh = ChuanHoa(tbNoiSinh.Text.ToLower());
                        sv = new SinhVien_DTO(tbMaSV.Text, hoSV, tenSV,gioiTinh, dtpNgaySinh.Value, diaChi,noiSinh, maLop,dtpNgayNhapHoc.Value);
           
                        SinhVien_BUS.themSV(sv);
                        MessageBox.Show("Thêm thành công");
                        // this.SinhVienbindingSource.EndEdit();
                        //thêm trực tiếp sinh viên vào gridview mà không load lại danh sách
                        gvSinhVien.SetFocusedRowCellValue(colHoSV, hoSV);
                        gvSinhVien.SetFocusedRowCellValue(colTenSV, tenSV);
                        gvSinhVien.SetFocusedRowCellValue(colGioiTinh, gioiTinh);
                        gvSinhVien.SetFocusedRowCellValue(colNgaySinh, dtpNgaySinh.Value);
                        gvSinhVien.SetFocusedRowCellValue(colNgayNhapHoc, dtpNgayNhapHoc.Value);
                        gvSinhVien.SetFocusedRowCellValue(colDiaChi, diaChi);
                        gvSinhVien.SetFocusedRowCellValue(colNoiSinh, noiSinh);
                        gvSinhVien.SetFocusedRowCellValue(colTenLop, cboLop.Text);
                        //load_DS();
                        //chuẩn hóa ở textbox
                        tbHoSV.Text = hoSV;
                        tbTenSV.Text = tenSV;
                        tbDiaChi.Text = diaChi;
                        tbNoiSinh.Text = noiSinh;
                        //
                        them = true;
                    }
                    else if (tbHoSV.Text == "" || tbTenSV.Text == "")
                    {
                        MessageBox.Show("Nhập đầy đủ Họ Tên Sinh Viên");
                    }
                    else
                        MessageBox.Show("Chọn lớp cho Sinh viên");
                }
                else
                {
                     if(MessageBox.Show("Bạn có chắc muốn sửa không?","Thông báo",MessageBoxButtons.YesNo,MessageBoxIcon.Question)==DialogResult.Yes)
                     {
                         try
                         {
                             if (ChuanHoa(tbHoSV.Text.Trim().ToLower()) != gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString().Trim())
                             {
                                 SinhVien_BUS.suaSV_HoSV(tbMaSV.Text.Trim(), ChuanHoa(tbHoSV.Text.Trim().ToLower()));
                                 gvSinhVien.SetFocusedRowCellValue(colHoSV, ChuanHoa(tbHoSV.Text.Trim().ToLower()));
                                 tbHoSV.Text = ChuanHoa(tbHoSV.Text.Trim().ToLower());
                             }
                             else
                                 tbHoSV.Text = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString().Trim().ToLower());
                             if (ChuanHoa(tbTenSV.Text.Trim().ToLower()) != gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString().Trim())
                             {
                                 SinhVien_BUS.suaSV_TenSV(tbMaSV.Text.Trim(), ChuanHoa(tbTenSV.Text.Trim().ToLower()));
                                 gvSinhVien.SetFocusedRowCellValue(colTenSV, ChuanHoa(tbTenSV.Text.Trim().ToLower()));
                                 tbTenSV.Text = ChuanHoa(tbTenSV.Text.Trim().ToLower());
                             }
                             else
                                 tbTenSV.Text = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString().Trim().ToLower());
                             if (cboGioiTinh.Text.Trim() != gvSinhVien.GetFocusedRowCellValue(colGioiTinh).ToString().Trim())
                             {
                                 SinhVien_BUS.suaSV_GioiTinh(tbMaSV.Text.Trim(), cboGioiTinh.Text.Trim());
                                 gvSinhVien.SetFocusedRowCellValue(colGioiTinh, cboGioiTinh.Text);
                             }
                             if (gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString()==""||dtpNgaySinh.Value != DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString()))
                             {
                                 SinhVien_BUS.suaSV_NgaySinh(tbMaSV.Text.Trim(), dtpNgaySinh.Value);
                                 gvSinhVien.SetFocusedRowCellValue(colNgaySinh, dtpNgaySinh.Value);
                             }
                             if (gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString() == "" || dtpNgaySinh.Value != DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString()))
                             {
                                 SinhVien_BUS.suaSV_NgayNhapHoc(tbMaSV.Text.Trim(), dtpNgayNhapHoc.Value);
                                 gvSinhVien.SetFocusedRowCellValue(colNgayNhapHoc, dtpNgayNhapHoc.Value);
                             }
                             if (ChuanHoa(tbDiaChi.Text.Trim().ToLower()) != gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString().Trim())
                             {
                                 SinhVien_BUS.suaSV_DiaChi(tbMaSV.Text.Trim(), ChuanHoa(tbDiaChi.Text.Trim().ToLower()));
                                 gvSinhVien.SetFocusedRowCellValue(colDiaChi, ChuanHoa(tbDiaChi.Text.Trim().ToLower()));
                                 tbDiaChi.Text = ChuanHoa(tbDiaChi.Text.Trim().ToLower());
                             }
                             else
                                 tbDiaChi.Text = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString().Trim().ToLower());
                             if (ChuanHoa(tbNoiSinh.Text.Trim().ToLower()) != gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString().Trim())
                             {
                                 SinhVien_BUS.suaSV_NoiSinh(tbMaSV.Text.Trim(), ChuanHoa(tbNoiSinh.Text.Trim().ToLower()));
                                 gvSinhVien.SetFocusedRowCellValue(colNoiSinh, ChuanHoa(tbNoiSinh.Text.Trim().ToLower()));
                                 tbNoiSinh.Text = ChuanHoa(tbNoiSinh.Text.Trim().ToLower());
                             }
                             else
                                 tbNoiSinh.Text = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString().Trim().ToLower());
                             if (cboLop.Text.Trim() != gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString().Trim())
                             {
                                 SinhVien_BUS.suaSV_Lop(tbMaSV.Text.Trim(), cboLop.Text.Trim());
                                 gvSinhVien.SetFocusedRowCellValue(colTenLop, cboLop.Text);
                             }
                             MessageBox.Show("Sửa thành công!");
                             sua = true;
                         }
                         catch
                         {
                             MessageBox.Show("Sửa không thành công");
                         }
                     }
                    else
                     {
                         tbMaSV.Text = gvSinhVien.GetFocusedRowCellValue(colMaSV).ToString();
                         tbHoSV.Text = gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString();
                         tbTenSV.Text = gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString();
                         //ToUpper để convert sang chữ in hoa
                         if (gvSinhVien.GetFocusedRowCellValue(colGioiTinh).ToString().ToUpper() == "NAM") cboGioiTinh.SelectedIndex = 0;
                         else cboGioiTinh.SelectedIndex = 1;
                         if (gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString() != "")
                             dtpNgaySinh.Value = DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString());
                         if (gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString() != "")
                             dtpNgayNhapHoc.Value = DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString());
                         tbNoiSinh.Text = gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString();
                         tbDiaChi.Text = gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString();
                         cboLop.Text = gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString();
                     }
                }

            }
            catch
            {
                MessageBox.Show("Lưu thất bại");
            }
        }
        //button hủy (khi thêm hoặc sửa)
        private void btnHuy_Click(object sender, EventArgs e)
        {
            //hủy khi không muốn thêm sinh viên
           // MessageBox.Show(gvSinhVien.FocusedRowHandle+" "+gvSinhVien.RowCount);
            if (!them && gvSinhVien.FocusedRowHandle == gvSinhVien.RowCount - 1)
            {
                them = true;
                SinhVienbindingSource.RemoveAt(gvSinhVien.RowCount - 1);             
            }
                //hủy khi sửa
            else
            {
                tbMaSV.Text = gvSinhVien.GetFocusedRowCellValue(colMaSV).ToString();
                tbHoSV.Text = gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString();
                tbTenSV.Text = gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString();
                //ToUpper để convert sang chữ in hoa
                if (gvSinhVien.GetFocusedRowCellValue(colGioiTinh).ToString().ToUpper() == "NAM") cboGioiTinh.SelectedIndex = 0;
                else cboGioiTinh.SelectedIndex = 1;
                if (gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString() != "")
                    dtpNgaySinh.Value = DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString());
                if (gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString() != "")
                    dtpNgayNhapHoc.Value = DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString());
                tbNoiSinh.Text = gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString();
                tbDiaChi.Text = gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString();
                cboLop.Text = gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString();
            }
        }
        //khi sửa ở 1 dòng trên gridview và trỏ sang dòng khác thì có sự kiện 
        private void gvSinhVien_ValidateRow(object sender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)
        {
            if (!them)
            {
                if(gvSinhVien.FocusedRowHandle != gvSinhVien.RowCount - 1)
                {

                }
                else
                {
                    if (MessageBox.Show("Bạn có chắc muốn lưu không?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                    {
                        try
                        {
                            if (gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString() != "" && 
                                gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString() != "" && 
                                gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString() != "")
                            {
                                //chuẩn hóa tên
                                string maLop = Lop_BUS.maLop(gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString());
                                string hoSV = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString().ToLower());
                                string tenSV = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString().ToLower());
                                string gioiTinh = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colGioiTinh).ToString().ToLower());
                                string diaChi = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString().ToLower());
                                string noiSinh = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString().ToLower());
                                DateTime ngaySinh=DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString());
                                DateTime ngayNhapHoc = DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString());
                                sv = new SinhVien_DTO(tbMaSV.Text, hoSV, tenSV, gioiTinh, ngaySinh, diaChi, noiSinh, maLop,ngayNhapHoc);

                                SinhVien_BUS.themSV(sv);
                                MessageBox.Show("Thêm thành công");
                                // this.SinhVienbindingSource.EndEdit();
                                //chuẩn hóa trực tiếp sinh viên vào gridview mà không load lại danh sách
                                gvSinhVien.SetFocusedRowCellValue(colHoSV, hoSV);
                                gvSinhVien.SetFocusedRowCellValue(colTenSV, tenSV);
                                gvSinhVien.SetFocusedRowCellValue(colDiaChi, diaChi);
                                gvSinhVien.SetFocusedRowCellValue(colNoiSinh, noiSinh);
                                //load_DS();
                                //chuẩn hóa ở textbox
                                tbHoSV.Text = hoSV;
                                tbTenSV.Text = tenSV;
                                cboGioiTinh.Text = gioiTinh;
                                cboLop.Text = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString());
                                tbDiaChi.Text = diaChi;
                                tbNoiSinh.Text = noiSinh;
                                dtpNgaySinh.Value = ngaySinh;
                                dtpNgayNhapHoc.Value = ngayNhapHoc;
                                //
                                them = true;
                            }
                            else if (tbHoSV.Text == "" || tbTenSV.Text == "")
                            {
                                MessageBox.Show("Nhập đầy đủ Họ Tên Sinh Viên");
                            }
                            else
                                MessageBox.Show("Chọn lớp cho Sinh viên");

                        }
                        catch
                        {
                            MessageBox.Show("Lưu không thành công!");
                        }
                    }
                    else
                    {
                        them = true;
                        SinhVienbindingSource.RemoveAt(gvSinhVien.RowCount - 1);                
                    }
                }
            }
            else if(daChuanhoa)
            {
                daChuanhoa = false;
            }
            else if(sua)
            {
                sua = false;
            }
            else
            {
                //khi vừa mới thêm xong
                if (tbHoSV.Text.Trim() == ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString().Trim().ToLower())&&
                    tbTenSV.Text.Trim() == ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString().Trim().ToLower())&&
                    cboGioiTinh.Text.Trim() == ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colGioiTinh).ToString().Trim().ToLower())&&
                    tbDiaChi.Text.Trim() == ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString().Trim().ToLower())&&
                    tbNoiSinh.Text.Trim() == ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString().Trim().ToLower())&&
                    cboLop.Text.Trim() == gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString().Trim()&&
                    gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString()!=""&&
                    gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString()!=""&&
                    dtpNgayNhapHoc.Value==DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString())&&
                    dtpNgaySinh.Value==DateTime.Parse( gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString()))
                {

                }
                else
                {
                    if (MessageBox.Show("Bạn có chắc muốn sửa không?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                    {
                        try
                        {
                            // string maLop = Lop_BUS.maLop(cboLop.Text);
                            //  sv = new SinhVien_DTO(tbHoSV.Text, tbTenSV.Text, cboGioiTinh.Text, dtpNgaySinh.Value, tbDiaChi.Text, tbNoiSinh.Text, maLop);
                            //   SinhVien_BUS.suaSV(sv);
                            if (tbHoSV.Text.Trim() != ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString().Trim().ToLower()))
                            {
                                string hoSV = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colHoSV).ToString().Trim().ToLower());
                                SinhVien_BUS.suaSV_HoSV(tbMaSV.Text, hoSV);
                                tbHoSV.Text = hoSV;
                                gvSinhVien.SetFocusedRowCellValue(colHoSV, hoSV);
                            }
                            else
                                gvSinhVien.SetFocusedRowCellValue(colHoSV, ChuanHoa(tbHoSV.Text.Trim().ToLower()));

                            if (tbTenSV.Text.Trim() != ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString().Trim().ToLower()))
                            {
                                string tenSV=ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colTenSV).ToString().Trim().ToLower());
                                SinhVien_BUS.suaSV_TenSV(tbMaSV.Text, tenSV);
                                tbTenSV.Text = tenSV;
                                gvSinhVien.SetFocusedRowCellValue(colTenSV, tenSV);
                            }
                            else
                                gvSinhVien.SetFocusedRowCellValue(colTenSV, ChuanHoa(tbTenSV.Text.Trim().ToLower()));
                            if (cboGioiTinh.Text.Trim() != ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colGioiTinh).ToString().Trim().ToLower()))
                            {
                                SinhVien_BUS.suaSV_GioiTinh(tbMaSV.Text, ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colGioiTinh).ToString().Trim().ToLower()));
                                cboGioiTinh.Text = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colGioiTinh).ToString().Trim().ToLower());
                            }
                            if (dtpNgaySinh.Value != DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString()))
                            {
                                SinhVien_BUS.suaSV_NgaySinh(tbMaSV.Text, DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString()));
                                dtpNgaySinh.Value = DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgaySinh).ToString());
                            }
                            if (dtpNgayNhapHoc.Value != DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString()))
                            {
                                SinhVien_BUS.suaSV_NgayNhapHoc(tbMaSV.Text, DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString()));
                                dtpNgayNhapHoc.Value = DateTime.Parse(gvSinhVien.GetFocusedRowCellValue(colNgayNhapHoc).ToString());
                            }
                            if (tbDiaChi.Text.Trim() != ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString().Trim().ToLower()))
                            {
                                SinhVien_BUS.suaSV_DiaChi(tbMaSV.Text, ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString().Trim().ToLower()));
                                tbDiaChi.Text = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString().Trim().ToLower());
                                gvSinhVien.SetFocusedRowCellValue(colDiaChi, ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colDiaChi).ToString().Trim().ToLower()));
                            }
                            else
                                gvSinhVien.SetFocusedRowCellValue(colDiaChi, ChuanHoa(tbDiaChi.Text.Trim().ToLower()));
                            if (tbNoiSinh.Text.Trim() != ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString().Trim().ToLower()))
                            {
                                SinhVien_BUS.suaSV_NoiSinh(tbMaSV.Text, ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString().Trim().ToLower()));
                                tbNoiSinh.Text = ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString().Trim().ToLower());
                                gvSinhVien.SetFocusedRowCellValue(colNoiSinh, ChuanHoa(gvSinhVien.GetFocusedRowCellValue(colNoiSinh).ToString().Trim().ToLower()));
                            }
                            else
                                gvSinhVien.SetFocusedRowCellValue(colNoiSinh, ChuanHoa(tbNoiSinh.Text.Trim().ToLower()));
                            if (cboLop.Text.Trim() != gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString().Trim())
                            {
                                SinhVien_BUS.suaSV_Lop(tbMaSV.Text, gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString().Trim());
                                cboLop.Text = gvSinhVien.GetFocusedRowCellValue(colTenLop).ToString().Trim();
                            }
                            MessageBox.Show("Sửa thành công!");
                        }
                        catch
                        {
                            MessageBox.Show("Sửa không thành công!");
                        }
                    }
                    else
                    {
                        gvSinhVien.SetFocusedRowCellValue(colHoSV, tbHoSV.Text);
                        gvSinhVien.SetFocusedRowCellValue(colTenSV, tbTenSV.Text);
                        gvSinhVien.SetFocusedRowCellValue(colGioiTinh, cboGioiTinh.Text);
                        gvSinhVien.SetFocusedRowCellValue(colNgaySinh, dtpNgaySinh.Value);
                        gvSinhVien.SetFocusedRowCellValue(colNgayNhapHoc, dtpNgayNhapHoc.Value);
                        gvSinhVien.SetFocusedRowCellValue(colDiaChi, tbDiaChi.Text);
                        gvSinhVien.SetFocusedRowCellValue(colNoiSinh, tbNoiSinh.Text);
                        gvSinhVien.SetFocusedRowCellValue(colTenLop, cboLop.Text);
                    }
                }
            }
        }

        private void btnXoa_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if(MessageBox.Show("Bạn có chắc muốn xóa không?","Thông báo",MessageBoxButtons.YesNo,MessageBoxIcon.Question)==DialogResult.Yes)
            {
                SinhVien_BUS.xoaSV(gvSinhVien.GetFocusedRowCellValue(colMaSV).ToString());
                SinhVienbindingSource.RemoveAt(gvSinhVien.FocusedRowHandle);
                MessageBox.Show("Xóa thành công!");
            }
        }
        //chuẩn hóa dữ liệu
        private void btnChuanHoa_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                DataTable dtb = (DataTable)SinhVienbindingSource.DataSource;
                for(int i=0;i<dtb.Rows.Count;i++)
                {
                    string maSV = dtb.Rows[i][0].ToString();
                    string hoSV = ChuanHoa(dtb.Rows[i][1].ToString().ToLower());
                    string tenSV =ChuanHoa(dtb.Rows[i][2].ToString().ToLower());
                    string gioiTinh = ChuanHoa(dtb.Rows[i][3].ToString().ToLower());
                    string diaChi = ChuanHoa(dtb.Rows[i][5].ToString().ToLower());
                    string noiSinh = ChuanHoa(dtb.Rows[i][6].ToString().ToLower());
                    SinhVien_BUS.chuanHoaSV(maSV, hoSV, tenSV, gioiTinh, diaChi, noiSinh);
                    string tenLop = ChuanHoa(dtb.Rows[i][7].ToString().ToLower());
                    gvSinhVien.SetRowCellValue(i, colHoSV, hoSV);
                    gvSinhVien.SetRowCellValue(i, colTenSV, tenSV);
                    gvSinhVien.SetRowCellValue(i, colGioiTinh, gioiTinh);
                    gvSinhVien.SetRowCellValue(i, colDiaChi, diaChi);
                    gvSinhVien.SetRowCellValue(i, colNoiSinh, noiSinh);
                    gvSinhVien.SetRowCellValue(i, colTenLop, tenLop);
                }
                daChuanhoa = true;
            }
            catch
            {
                MessageBox.Show("Chuẩn hóa thất bại");
            }
        }

        //chuẩn hóa chuỗi
        public string ChuanHoa(string st)
        {
            string st1 = "";
            st = st.Trim();
            while (st.Length != 0)
            {
                st += " ";
                int i = st.IndexOf(' ');
                string s = char.ToUpper(st[0]) + st.Substring(1, i);
                st1 += s;
                st = st.Substring(i + 1).Trim();
            }
            return st1.Trim();
        }

        private void btnCapNhat_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            load_DS();
            //load tên lớp vào combobox
            DataTable dtb = Lop_BUS.LoadtenLop();
            for (int i = 0; i < dtb.Rows.Count; i++)
            {
                // string name = dtb.Rows[i][0].ToString().ToUpper();

                string name = s.ChuanHoa(dtb.Rows[i][0].ToString().ToLower());
                cboLop.Items.Add(name);
                repositoryItemComboBox1.Items.Add(name);
            }
        }

        private void btnXemDiem_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            frmDiemSinhVien f = new frmDiemSinhVien();
            f.MaSV = tbMaSV.Text;
            f.TenSV = tbHoSV.Text + " " + tbTenSV.Text;
            f.loadInfo();
            f.Show();
        }

        private void btnHocBong_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            frmQuanLyHocBong f = new frmQuanLyHocBong();
            f.load();
            f.loadInfo();
            f.Show();
        }

        private void btnThiLai_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            frmThiLai f = new frmThiLai();
            f.loadInfo();
            f.Show();
        }




    }
}
