using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using BUS;

namespace BTL_QUANLYSINHVIEN
{
    public partial class frmGiaoVien : Form
    {
        public bool them = true;
        public bool sua = false;
        public frmGiaoVien()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            AnMenu(false);
        }

        public void load_DS()
        {
            DSGVbindingSource.DataSource = GiaoVien_BUS.LoadDSGiaoVien();
            gcGiaoVien.DataSource = DSGVbindingSource;
            int soKhoa = cboTenKhoa.Items.Count;
            for (int i = 0; i < soKhoa; i++)
            {
                cboTenKhoa.Items.RemoveAt(0);
                repositoryItemComboBox2.Items.RemoveAt(0);
            }
        }
        private void gvGiaoVien_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
        {
            if (gvGiaoVien.FocusedRowHandle >= 0)
            {
                tbMaGiaoVien.Text = gvGiaoVien.GetFocusedRowCellValue(colMaGV).ToString();
                tbHoGiaoVien.Text = gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString();
                tbTenGiaoVien.Text = gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString();
                if (gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString() == "")
                    cboTenKhoa.ResetText();
                else cboTenKhoa.Text = gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString();
                if (gvGiaoVien.GetFocusedRowCellValue(colTrinhDo).ToString() == "")
                    cboTrinhDo.ResetText();
                else cboTrinhDo.Text = gvGiaoVien.GetFocusedRowCellValue(colTrinhDo).ToString();
                sua = false;
            }
        }
        public void AnMenu(bool logged)
        {
            //Mac dinh la dang nhap thanh cong bat het cac Menu

            //
            btnThem.Enabled = logged;
            btnSua.Enabled = logged;
            btnXoa.Enabled = logged;
            //  btnThoat.Enabled = logged;
          //  btnThemSV.Enabled = logged;
           // btnSuaSV.Enabled = logged;
            btnLuu.Enabled = logged;
            btnHuy.Enabled = logged;
            btnCapNhat.Enabled = logged;
          //  btnXoaSV.Enabled = logged;
          //  btnNhapDiem.Enabled = logged;
            // btnPrevious.Enabled = logged;
            // btnFirst.Enabled = logged;
        }
        private void btnDSGiaoVien_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            load_DS();
            DataTable dtb = Khoa_BUS.LoadtenKhoa();
            for (int i = 0; i < dtb.Rows.Count; i++)
            {
                string name = ChuanHoa(dtb.Rows[i][0].ToString().ToLower());
                cboTenKhoa.Items.Add(name);
                repositoryItemComboBox2.Items.Add(name);
            }
            nbcThongTin.OptionsNavPane.NavPaneState = DevExpress.XtraNavBar.NavPaneState.Expanded;
            btnDSGiaoVien.Enabled = false;
            AnMenu(true);
        }

        //tự tăng mã giáo viên
        public string nextMa(string s)
        {
            string sub1 = s.Substring(0, 2);
            string sub2 = s.Substring(2).Trim();
            int ma = Convert.ToInt32(sub2) + 1;
            string sub = "";
            //chèn thêm các kí tự 0 vào mã
            for (int i = 0; i < sub2.Length - ma.ToString().Length; i++)
                sub += "0";
            sub += ma.ToString();
            sub1 += sub;
            //
            return sub1;
        }
        public string ChuanHoa(string st)
        {
            string st1 = "";
            st = st.Trim();
            while (st.Length != 0)
            {
                st += " ";
                int i = st.IndexOf(' ');
                string s = char.ToUpper(st[0]) + st.Substring(1, i);
                st1 += s;
                st = st.Substring(i + 1).Trim();
            }
            return st1.Trim();
        }

        private void btnSua_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            nbcThongTin.OptionsNavPane.NavPaneState = DevExpress.XtraNavBar.NavPaneState.Expanded;
            tbHoGiaoVien.Focus();
        }

        private void btnThem_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            nbcThongTin.OptionsNavPane.NavPaneState = DevExpress.XtraNavBar.NavPaneState.Expanded;
            if (them)
            {
                cboTenKhoa.Refresh();
                cboTrinhDo.Refresh();
                tbHoGiaoVien.ResetText();
                tbTenGiaoVien.ResetText();
                string maGV = nextMa(GiaoVien_BUS.LastMaGV());
                //
                them = false;
                DSGVbindingSource.AddNew();
                //mã sinh viên tự tăng
                gvGiaoVien.SetFocusedRowCellValue(colMaGV, maGV);
                tbMaGiaoVien.Text = maGV.ToString();
                //trỏ tới dòng cuối cùng trong gridview
                gvGiaoVien.FocusedRowHandle = gvGiaoVien.RowCount - 1;
                tbHoGiaoVien.Focus();

            }
            else
            {
                tbHoGiaoVien.Focus(); Focus();
                gvGiaoVien.FocusedRowHandle = gvGiaoVien.RowCount - 1;
            }
        }

        private void btnLuu_Click(object sender, EventArgs e)
        {
            try
            {
                if (!them && gvGiaoVien.FocusedRowHandle == gvGiaoVien.RowCount - 1)
                {
                    if (tbHoGiaoVien.Text != "" && tbTenGiaoVien.Text != "" && cboTenKhoa.Text != "" )
                    {
                        string hoGV = ChuanHoa(tbHoGiaoVien.Text.Trim().ToLower());
                        string tenGV = ChuanHoa(tbTenGiaoVien.Text.Trim().ToLower());
                        GiaoVien_BUS.themGV(tbMaGiaoVien.Text, hoGV, tenGV, cboTenKhoa.Text, cboTrinhDo.Text);
                        //thêm trực tiếp lớp vào gridview mà không load lại danh sách
                        gvGiaoVien.SetFocusedRowCellValue(colMaGV, tbMaGiaoVien.Text);
                        gvGiaoVien.SetFocusedRowCellValue(colHoGV, hoGV);
                        gvGiaoVien.SetFocusedRowCellValue(colTenGV, tenGV);
                        gvGiaoVien.SetFocusedRowCellValue(colTenKhoa, cboTenKhoa.Text);
                        gvGiaoVien.SetFocusedRowCellValue(colTrinhDo,cboTrinhDo.Text);
                        MessageBox.Show("Thêm thành công");
                        tbTenGiaoVien.Text = tenGV;
                        tbHoGiaoVien.Text = hoGV;
                        them = true;
                    }
                    //else if (tbHoSV.Text == "" || tbTenSV.Text == "")
                    //{
                    //    MessageBox.Show("Nhập đầy đủ Họ Tên Sinh Viên");
                    //}
                    else
                        MessageBox.Show("Nhập đầy đủ thông tin cho Giáo Viên");
                }
                else
                {
                    if (MessageBox.Show("Bạn có chắc muốn sửa không?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                    {
                        try
                        {
                            if (ChuanHoa(tbHoGiaoVien.Text.Trim().ToLower()) != gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString())
                            {
                                string s = ChuanHoa(tbHoGiaoVien.Text.Trim().ToLower());
                                GiaoVien_BUS.suaGV_HoGV(tbMaGiaoVien.Text, s);
                                gvGiaoVien.SetFocusedRowCellValue(colHoGV, s);
                                tbHoGiaoVien.Text = s;
                            }
                            else
                                tbHoGiaoVien.Text = gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString();
                            if (ChuanHoa(tbTenGiaoVien.Text.Trim().ToLower()) != gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString())
                            {
                                string s = ChuanHoa(tbTenGiaoVien.Text.Trim().ToLower());
                                GiaoVien_BUS.suaSV_TenGV(tbMaGiaoVien.Text, s);
                                gvGiaoVien.SetFocusedRowCellValue(colTenGV, s);
                                tbTenGiaoVien.Text = s;
                            }
                            else
                                tbTenGiaoVien.Text = gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString();
                            if (cboTenKhoa.Text!=gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString())
                            {
                                GiaoVien_BUS.suaGV_Khoa(tbMaGiaoVien.Text,cboTenKhoa.Text);
                                gvGiaoVien.SetFocusedRowCellValue(colTenKhoa,cboTenKhoa.Text);
                            }
                            if (cboTrinhDo.Text.Trim() != gvGiaoVien.GetFocusedRowCellValue(colTrinhDo).ToString())
                            {
                                GiaoVien_BUS.suaGV_TrinhDo(tbMaGiaoVien.Text,cboTrinhDo.Text);
                                gvGiaoVien.SetFocusedRowCellValue(colTrinhDo,cboTrinhDo.Text);
                            }
                            MessageBox.Show("Sửa thành công!");
                            sua = true;
                        }
                        catch
                        {
                            MessageBox.Show("Sửa không thành công!");
                        }
                    }
                    else
                    {
                        tbMaGiaoVien.Text = gvGiaoVien.GetFocusedRowCellValue(colMaGV).ToString();
                        cboTenKhoa.Text = gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString();
                        cboTrinhDo.Text = gvGiaoVien.GetFocusedRowCellValue(colTrinhDo).ToString();
                        tbHoGiaoVien.Text=gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString();
                        tbTenGiaoVien.Text=gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString();
                    }
                }

            }
            catch
            {
                MessageBox.Show("Lưu thất bại");
            }
        }

        private void btnHuy_Click(object sender, EventArgs e)
        {
            if (!them && gvGiaoVien.FocusedRowHandle == gvGiaoVien.RowCount - 1)
            {
                them = true;
                DSGVbindingSource.RemoveAt(gvGiaoVien.RowCount - 1);
            }
            //hủy khi sửa
            else
            {
                tbMaGiaoVien.Text = gvGiaoVien.GetFocusedRowCellValue(colMaGV).ToString();
                cboTenKhoa.Text = gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString();
                cboTrinhDo.Text = gvGiaoVien.GetFocusedRowCellValue(colTrinhDo).ToString();
                tbHoGiaoVien.Text = gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString();
                tbTenGiaoVien.Text = gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString();
            }
        }

        private void gvGiaoVien_ValidateRow(object sender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)
        {
            if (!them)
            {
                if (gvGiaoVien.FocusedRowHandle != gvGiaoVien.RowCount - 1)
                {

                }
                else
                {
                    if (MessageBox.Show("Bạn có chắc muốn lưu không?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                    {
                        try
                        {
                            if (gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString() != "" &&
                            gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString() != "" &&
                            gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString() != "")
                            {
                                //chuẩn hóa tên
                                string maGV = gvGiaoVien.GetFocusedRowCellValue(colMaGV).ToString();
                                string hoGV = ChuanHoa(gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString().ToLower());
                                string tenGV = ChuanHoa(gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString().ToLower());
                                string tenKhoa = gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString();
                                string trinhDo=gvGiaoVien.GetFocusedRowCellValue(colTrinhDo).ToString();
                                GiaoVien_BUS.themGV(maGV, hoGV, tenGV, tenKhoa, trinhDo);
                                MessageBox.Show("Thêm thành công");
                                // this.SinhVienbindingSource.EndEdit();
                                //chuẩn hóa trực tiếp sinh viên vào gridview mà không load lại danh sách
                                //  gvGiaoVien.SetFocusedRowCellValue(colHoSV, hoSV);
                                // gvGiaoVien.SetFocusedRowCellValue(colTenSV, tenSV);
                                ///  gvGiaoVien.SetFocusedRowCellValue(colDiaChi, diaChi);
                                //  gvGiaoVien.SetFocusedRowCellValue(colNoiSinh, noiSinh);
                                //load_DS();
                                //chuẩn hóa ở textbox
                                tbHoGiaoVien.Text = hoGV;
                                tbTenGiaoVien.Text = tenGV;
                                cboTenKhoa.Text = tenKhoa;
                                cboTrinhDo.Text = trinhDo;
                                //
                                them = true;
                            }
                            else
                                MessageBox.Show("Nhập đầy đủ thông tin cho Giáo viên");
                        }
                        catch
                        {
                            MessageBox.Show("Thêm không thành công!");
                        }
                    }
                    else
                    {
                        them = true;
                        DSGVbindingSource.RemoveAt(gvGiaoVien.RowCount - 1);
                    }
                }
            }
            else if (sua)
            {
                sua = false;
            }
            else
            {
                if (tbHoGiaoVien.Text.Trim()==gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString()&&
                    tbTenGiaoVien.Text.Trim()==gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString()&&
                    cboTenKhoa.Text==gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString()&&
                    cboTrinhDo.Text==gvGiaoVien.GetFocusedRowCellValue(colTrinhDo).ToString()&&
                    cboTenKhoa.Text==gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString())
                {

                }
                else
                {
                    if (MessageBox.Show("Bạn có chắc muốn sửa không?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                    {
                        try
                        {
                            if (tbHoGiaoVien.Text.Trim() != gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString())
                            {
                                string s = ChuanHoa(gvGiaoVien.GetFocusedRowCellValue(colHoGV).ToString().ToLower());
                                GiaoVien_BUS.suaGV_HoGV(tbMaGiaoVien.Text, s);
                                tbHoGiaoVien.Text =s;
                                gvGiaoVien.SetFocusedRowCellValue(colHoGV, s);
                            }
                            if (tbTenGiaoVien.Text.Trim() != gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString())
                            {
                                string s = ChuanHoa(gvGiaoVien.GetFocusedRowCellValue(colTenGV).ToString().ToLower());
                                GiaoVien_BUS.suaSV_TenGV(tbMaGiaoVien.Text, s);
                                tbTenGiaoVien.Text = s;
                                gvGiaoVien.SetFocusedRowCellValue(colTenGV, s);
                            }
                            if (cboTenKhoa.Text != gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString())
                            {
                                string s = gvGiaoVien.GetFocusedRowCellValue(colTenKhoa).ToString();
                                GiaoVien_BUS.suaGV_Khoa(tbMaGiaoVien.Text, s);
                                cboTenKhoa.Text = s;
                            }
                            if (cboTrinhDo.Text.Trim() != gvGiaoVien.GetFocusedRowCellValue(colTrinhDo).ToString())
                            {
                                string s = gvGiaoVien.GetFocusedRowCellValue(colTrinhDo).ToString();
                                GiaoVien_BUS.suaGV_TrinhDo(tbMaGiaoVien.Text, s);
                                cboTrinhDo.Text = s;
                            }
                            MessageBox.Show("Sửa thành công!");
                        }
                        catch
                        {
                            MessageBox.Show("Sửa không thành công!");
                        }
                    }
                    else
                     {
                            gvGiaoVien.SetFocusedRowCellValue(colHoGV, tbHoGiaoVien.Text);
                            gvGiaoVien.SetFocusedRowCellValue(colTenGV,tbTenGiaoVien.Text);
                            gvGiaoVien.SetFocusedRowCellValue(colTrinhDo,cboTrinhDo.Text);
                            gvGiaoVien.SetFocusedRowCellValue(colTenKhoa,cboTenKhoa.Text);
                        }
                }
            }
        }

        private void btnXoa_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show("Bạn có chắc muốn xóa không?", "Thông báo", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                GiaoVien_BUS.xoaGV(gvGiaoVien.GetFocusedRowCellValue(colMaGV).ToString());
                DSGVbindingSource.RemoveAt(gvGiaoVien.FocusedRowHandle);
                MessageBox.Show("Xóa thành công!");
            }
        }

        private void btnCapNhat_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            load_DS();
            DataTable dtb = Khoa_BUS.LoadtenKhoa();
            for (int i = 0; i < dtb.Rows.Count; i++)
            {
                string name = ChuanHoa(dtb.Rows[i][0].ToString().ToLower());
                cboTenKhoa.Items.Add(name);
                repositoryItemComboBox2.Items.Add(name);
            }
            nbcThongTin.OptionsNavPane.NavPaneState = DevExpress.XtraNavBar.NavPaneState.Expanded;
        }





    }
}
